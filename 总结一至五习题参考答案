总结一：

1.代码如下：
print('汕头',end='--')
print('牛肉火锅')
2.代码如下：
print('''优美胜于丑陋
明了胜于晦涩
简洁胜于复杂
复杂胜于凌乱''')
或者
print('优美胜于丑陋\n明了胜于晦涩\n简洁胜于复杂\n复杂胜于凌乱')
3.错误，变量名不能以数字开头。

变量的命名规范：
只能是一个词，也就是说中间不能有空格；
可以由字母、下划线和数字组成；
不能以数字开头；
尽量和数据内容有一定联系，也就是说，有意义的名字；
不要使用Python关键字或函数名。

4.正确
5.正确。结果显示为 '10+10'  20 



总结二

1.正确，字符串只认定有引号即可。

2.正确，当你不知道数据类型时，可以使用type函数去查看（分析代码时很管用）。

3.错误，int()函数只能转化整数型的字符串，如字符串’5‘、'18'就可以用int函数去转化。

4.代码如下：
a = 3
c = '2.08'
d=1.8
print(a+float(c)+d)
整数型和浮点数都是数，可以进行数学运算。只要是字符串类型的数据，不能计算。

5.
代码如下
a = 2
c = 3
d = 5
print(a**c) # **是幂，表示2的3次方
print(d%a) # %表示取余数
print(d//a) # //表示取商的整数部分
print(d/a) # / 表示 d 除以 a
>>>
8
1
2
2.5



总结三


1.请自己使用if else写出一个判断语句，并进行注释
a =123  #创建一个变量a,用一个=创建，用一个变量前先创造它
if a == 100: #判断如果a等于100，就执行下面的打印语句。
    print(a)
else: #else后面不接任何内容，它表示其它情况了。属于else的，就执行下面的语句print
    print('a的值不等于100，a的值为',a)

2.==和=的区别是什么？
==是等于号，经常用于判断条件，=是赋值号。因为赋值经常用到，所以就用一个=来表示，比较便捷。

3.如果if elif else语句后面没有else，会报错吗？请说明原因
不会报错，多向判断里面说过，可以不以else结尾，是允许的。

4.你知道注释有几种方法？它们适用的场景有哪些？
注释有两种方式：行注释和块注释。行注释用#，块注释使用""" """。

5.怎么判断条件判断是内层的还是外层的？也就是怎么识别条件判断的层级？
根据缩进等级，越往外层，缩进越少；越往内层，缩进越多。


总结四

1.错误，是列表才可以，字典是通过键来取值。

2.正确。

3.代码如下：
list1=['小明',21,1.78,'大四','深圳','广东',2018]

print(list1[3:5])#正着索引
print(list1[-4:-2])#倒着索引

4.代码如下
list1=['小明',21,1.78,'大四','深圳','广东',2018]
list1.append('工作')#函数的固定用法，记得它的写法
print(list1)

list1.extend(['读书','理想'])#本质上是列表和列表的合并，所以写入时用[]
print(list1)

5.代码如下：

print(students['第一组'][1]['小美'])
#解析：
students = {
    '第一组':[{'小明':90,'小红':99},{'小刚':99,'小美':90}],
    '第二组':['小强','小兰','小伟','小芳']
    }
print(students['第一组'])#取出来后是个列表

print(students['第一组'][1])#取出列表的第1个元素（第1个元素是个字典）

print(students['第一组'][1]['小美'])#一层一层取，即可取出小美对应的值



总结五

1.正确，当不知道要循环的次数时，用while循环。

2.正确，for 和while 可以搭配else语句，当循环不成立时，执行else语句。

3.代码如下：
for i in range(11) : #range会取到0到10
    print(i*5)#打印每次乘以5的结果

a = 0 # 用一个变量先创造它
while a < 11:    #条件 如果a小于11成立，执行while下面打印a的值
    print(a*5)#每循环一次就打印a一次
    a = a + 1 

4.代码如下：
#for循环：
for i in range(21):#i分别取值0-20
    if i%2 != 0 : #如果 i%2 得出余数，如果该余数不为0，
        print(i)#打印i这个被除数
#whilex循环：
i = 0 #创建一个变量i
while i < 21:#条件判断如果i小于21，执行
    if i%2 != 0 : #如果 i%2 得出余数，如果该余数不为0的话，就打印i
        print(i)#打印i这个被除数
    i += 1 # i += 1 就是 i = i + 1 的简写

5.代码如下：
for i in range(3) : #开启for循环（遍历）
    password = int(input('请尝试输入密码')) #input默认返回一个字符串，
#加上int（）转化为整数类型

    if password == 888 : #进入判断，记得判断用 ==
        print('输入正确，您多多存款至本银行')
        break #打破循环
else : #for 可以搭配else，即当for循环结束时，执行else语句
    print('你已输入三次密码错误，请携带身份证和银行卡到银行网点报到吧。')



